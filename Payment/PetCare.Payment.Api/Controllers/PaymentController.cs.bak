namespace PetCare.Payment.Api.Controllers
using System.Threading.Tasks;
}
using System.Threading.Tasks;
namespace PetCare.Payment.Api.Controllers
{
    using Microsoft.AspNetCore.Mvc;
    using PetCare.Payment.Application.DTOs;
    using PetCare.Payment.Application.UseCases;
    using System.Threading.Tasks;

    /// <summary>
    /// Handles payment processing requests.
    /// </summary>
    [ApiController]
    [Route("api/[controller]")]
    public class PaymentController : ControllerBase
    {
        private readonly ProcessPaymentUseCase useCase;

        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentController"/> class.
        /// </summary>
        /// <param name="useCase">The use case responsible for processing payments.</param>
        public PaymentController(ProcessPaymentUseCase useCase)
        {
            this.useCase = useCase;
        }

        /// <summary>
        /// Processes a payment for a booking.
        /// </summary>
        /// <param name="request">The payment request containing booking ID, amount, and method.</param>
        /// <returns>The result of the payment operation.</returns>
        [HttpPost]
        public async Task<IActionResult> Post([FromBody] PaymentRequest request)
        {
            if (request.Amount <= 0)
            {
                return BadRequest("El monto debe ser mayor a cero.");
            }

            if (string.IsNullOrWhiteSpace(request.Method))
            {
                return BadRequest("El método de pago es obligatorio.");
            }

            var response = await this.useCase.ExecuteAsync(request);

            if (!response.Success)
            {
                return StatusCode(502, new
                {
                    response.TransactionId,
                    response.Message
                });
            }

            return Ok(response);
        }
    }
}
